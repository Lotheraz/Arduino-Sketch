//3 April 24 for testing only valve function and moter movement med sensor

const int electromagnetPin1 = 22;  // Pin for electromagnet controlling valve 1
const int electromagnetPin2 = 23;  // Pin for electromagnet controlling valve 2
const int electromagnetPin3 = 24;  // Pin for electromagnet controlling valve 3
const int electromagnetPin4 = 25;  // Pin for electromagnet controlling valve 4
const int electromagnetPin5 = 26;  // Pin for electromagnet controlling valve 5
const int electromagnetPin6 = 27;  // Pin for electromagnet controlling valve 6
const int electromagnetPin7 = 28;  // Pin for electromagnet controlling valve 8
const int electromagnetPin8 = 29;  // Pin for electromagnet controlling valve 9
const int electromagnetPin9 = 30; // Pin for electromagnet controlling valve 10
const int sensorDigitalPin = 31; // pin for senson of pump

const int dirPin = 10;
const int stepPin = 9;
const int enPin = 8;
//const int sensorDigitalPin = 31;
void setup() {
  // Set electromagnet pins as output pins
  pinMode(electromagnetPin1, OUTPUT);
  pinMode(electromagnetPin2, OUTPUT);
  pinMode(electromagnetPin3, OUTPUT);
  pinMode(electromagnetPin4, OUTPUT);
  pinMode(electromagnetPin5, OUTPUT);
  pinMode(electromagnetPin6, OUTPUT);
  pinMode(electromagnetPin7, OUTPUT);
  pinMode(electromagnetPin8, OUTPUT);
  pinMode(electromagnetPin9, OUTPUT);
  Serial.begin(9600); // Initialize serial communication
  pinMode(stepPin,OUTPUT);
  pinMode(dirPin,OUTPUT);
  pinMode(enPin,OUTPUT);
  digitalWrite(enPin,LOW);
}
void loop() {
  // Step 1: Close all valves
  closeAllValves();

  // Step 2: Turn off valve 4 for 20 seconds, motor moves up for 2 seconds
  openValve(4); // Open valve 4
  delay(5000); // Wait for 5 seconds
  closeValve(4); // Close valve 4
  moveMotor(dirPin, stepPin, HIGH, 2000); // Move motor up for 2 seconds

  delay(10000); // Delay between step 2 and step 3

  // Step 3: Turn on all valves for 20 seconds, motor moves down for 2 seconds
  openAllValves();
  delay(5000); // Wait for 5 seconds
  closeAllValves();
  moveMotor(dirPin, stepPin, LOW, 2000); // Move motor down for 2 seconds

  delay(10000); // Delay after step 3 before repeating the loop
}

// Function to move the motor continuously for a specified duration in milliseconds
void moveMotor(int dirPin, int stepPin, int direction, unsigned long duration) {
  digitalWrite(dirPin, direction); // Set the direction
  unsigned long startTime = millis();
  while(millis() - startTime < duration) {
    digitalWrite(stepPin, HIGH);
    delayMicroseconds(500); // Adjust as needed for your stepper motor speed
    digitalWrite(stepPin, LOW);
    delayMicroseconds(500); // Adjust as needed for your stepper motor speed
  }
}
void openAllValves() {
  digitalWrite(electromagnetPin1, HIGH);
  digitalWrite(electromagnetPin2, HIGH);
  digitalWrite(electromagnetPin3, HIGH);
  digitalWrite(electromagnetPin4, HIGH);
  digitalWrite(electromagnetPin5, HIGH);
  digitalWrite(electromagnetPin6, HIGH);
  digitalWrite(electromagnetPin7, HIGH);
  digitalWrite(electromagnetPin8, HIGH);
  digitalWrite(electromagnetPin9, HIGH);
}
// Function to close all valves
void closeAllValves() {
  digitalWrite(electromagnetPin1, LOW);
  digitalWrite(electromagnetPin2, LOW);
  digitalWrite(electromagnetPin3, LOW);
  digitalWrite(electromagnetPin4, LOW);
  digitalWrite(electromagnetPin5, LOW);
  digitalWrite(electromagnetPin6, LOW);
  digitalWrite(electromagnetPin7, LOW);
  digitalWrite(electromagnetPin8, LOW);
  digitalWrite(electromagnetPin9, LOW);
}
// Function to open a specific valve
void openValve(int valveNumber) {
  digitalWrite(getElectromagnetPin(valveNumber), HIGH); // Turn on electromagnet to open the valve
}

// Function to close a specific valve
void closeValve(int valveNumber) {
  digitalWrite(getElectromagnetPin(valveNumber), LOW); // Turn off electromagnet to close the valve
}

// Function to get the pin number of a specific electromagnet based on valve number
int getElectromagnetPin(int valveNumber) {
  switch(valveNumber) {
    case 1:
      return electromagnetPin1;
    case 2:
      return electromagnetPin2;
    case 3:
      return electromagnetPin3;
    case 4:
      return electromagnetPin4;
    case 5:
      return electromagnetPin5;
    case 6:
      return electromagnetPin6;
    case 7:
      return electromagnetPin7;
    case 8:
      return electromagnetPin8;
    case 9:
      return electromagnetPin9;
    default:
      return -1; // Invalid valve number
  }
}
